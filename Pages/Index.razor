@page "/"
@using SiaSkynet
@using Append.Blazor.Clipboard
@inject IClipboardService clipboardService
@inject IToastService toastService
@inject NavigationManager navigationManager

<div class="container">
    <div class="row height d-flex justify-content-center align-items-center">
        <div class="col-md-6">
            <div class="form">
                <div class="input-group mb-3">
                    <input type="text" class="form-control form-input" placeholder="Enter URL here..." @bind="url">
                    <div class="input-group-append">
                        @if (status == "loading")
                        {
                            <button style="width:55px" class="btn btn-primary" type="button" disabled>
                                <div class="spinner-grow spinner-grow-sm p-1 m-1" role="status"></div>
                            </button>
                        }
                        else if (status == "error")
                        {
                            <button style="width:55px" class="btn btn-danger" type="button" disabled>
                                <div class="oi oi-warning"></div>
                            </button>
                        }
                        else if (status == "invalid")
                        {
                            <button style="width:55px" class="btn btn-warning" type="button" @onclick="Clean">
                                <div class="oi oi-delete"></div>
                            </button>
                        }
                        else if (status == "done")
                        {
                            <button style="width:55px" class="btn btn-success" type="button" @onclick="async () => await CopyAndClean()">
                                <div class="oi oi-check"></div>
                            </button>
                        }
                        else
                        {
                            <button style="width:55px" class="btn btn-secondary" type="button" @onclick="async () => await Callback()">
                                <div class="oi oi-chevron-right p-1 m-1"></div>
                            </button>
                        }
                    </div>
                </div>
                <footer class="pt-3 mt-3 text-muted text-center small">
                    <div>&copy; Kodachi by Mili.ONE Network @DateTime.Now.Year</div>
                    <img class="m-3" src="https://siasky.net/AQCIcIe2dq4na7MA5Tu7GBdekAgABBj4Z6Q8_2TcmrD0AQ/img/build-with-skynet.svg" width="75">
                </footer>
            </div>
        </div>
    </div>
</div>

@code {
    string url;
    byte[] privateKey;
    byte[] publicKey;
    SiaSkynetClient client;
    string status = string.Empty;

    protected override void OnInitialized()
    {
        (privateKey,publicKey) = SiaSkynetClient.GenerateKeys("kodachi");
        client = new SiaSkynetClient();
    }

    private async Task Callback()
    {
        try
        {
            if (!Uri.TryCreate(url, UriKind.Absolute, out _))
            {
                status = "invalid";
                toastService.ShowWarning("Invalid link.", "Invalid!");

                return;
            }
            status = "loading";

            try
            {
                var uid = await client.SkyDbGetAsString(publicKey,new RegistryKey(url));
                if (!string.IsNullOrEmpty(uid))
                {
                    url = navigationManager.BaseUri + uid;
                    status = "done";
                    toastService.ShowSuccess("The link was already created.", "Success!");
                }
                else
                {
                    await CreateUrl();
                }
            }
            catch (Exception)
            {
                await CreateUrl();
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            toastService.ShowError(e.Message, "Error!");
            status = "error";
        }
    }

    public async Task CreateUrl()
    {
        var uid = Zuid.Compress(Guid.NewGuid()).ToLower();
        var res = await client.SkyDbSetAsString(privateKey, publicKey, new RegistryKey(uid), url);
        await client.SkyDbSetAsString(privateKey, publicKey, new RegistryKey(url), uid);
        if (res && url == await client.SkyDbGetAsString(publicKey, new RegistryKey(uid)))
        {
            url = navigationManager.BaseUri + uid;
            status = "done";
            toastService.ShowSuccess("Created successfully.", "Success!");
        }
        else
        {
            status = "error";
            toastService.ShowError("Create failed.", "Error!");
        }
    }

    private async Task CopyAndClean()
    {
        await clipboardService.CopyTextToClipboardAsync(url);
        toastService.ShowSuccess("Copied to clipboard.", "Copied!");
        url = string.Empty;
        status = string.Empty;
    }

    private void Clean()
    {
        url = string.Empty;
        status = string.Empty;
    }

}